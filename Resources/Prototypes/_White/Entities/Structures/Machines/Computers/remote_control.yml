- type: entity
  parent: BaseComputerAiAccess
  id: ComputerRemoteControl
  name: remote control console
  description: A computer equipped with a joystick. Has a faint cheetos smell around it.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: solar_screen
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Computer
    board: RemoteControlConsoleCircuitboard
  - type: PointLight
    radius: 1.5
    energy: 1.6
    color: "#e6e227"
  - type: RemoteControlConsole

- type: entity
  parent: BaseComputerCircuitboard
  id: RemoteControlConsoleCircuitboard
  name: remote control console computer board
  components:
  - type: ComputerBoard
    prototype: ComputerRemoteControl
  #- type: ReverseEngineering # Nyano
  #  difficulty: 2
  #  recipes:
  #     - RadarConsoleCircuitboard

- type: entity
  id: ActionEndRemoteControl
  name: End remote control
  description: Ends remote control
  categories: [ HideSpawnMenu ]
  components:
  - type: InstantAction
    itemIconStyle: NoItem
    icon:
      sprite: Interface/Actions/actions_mecha.rsi
      state: mech_eject
    event: !type:RemoteControlExitActionEvent

- type: entity
  id: RemoteControlConsoleSwitchToNextAction
  name: Next
  description: Switch to next controllable
  categories: [ HideSpawnMenu ]
  components:
  - type: InstantAction
    itemIconStyle: NoItem
    icon:
      sprite: Interface/Actions/actions_mecha.rsi
      state: mech_cycle_equip_off
    event: !type:RemoteControlConsoleSwitchNextActionEvent


- type: sourcePort
  id: RemoteControlSourcePort
  name: signal-port-name-remote-control-source
  description: signal-port-description-remote-control-source
  defaultLinks: [ RemoteControlInputPort ]

- type: sinkPort
  id: RemoteControlSinkPort
  name: signal-port-name-remote-control-sink
  description: signal-port-description-remote-control-sink

#- type: entity
#  parent: BaseWeaponBallisticTurret3D
#  id: WeaponTurretRC
#  suffix: Remote-Controlled
#  components:
#  - type: RemoteControllable
#  - type: HTN
#    enabled: false
#

- type: entity
  name: ship laser turret
  parent: [BaseWeaponEnergyTurret, InnateMassScanner90]
  id: BaseWeaponEnergyTurretShip
  abstract: true
  suffix: Remote Controlled
  components:
  - type: RemoteControllable
  - type: RemoteControlOverlay
  - type: HTN # since there is no functionality to discard inherited components, we just disable HTN instead
    enabled: false
  - type: MouseRotator
    angleTolerance: 0.5

- type: entity
  name: ship laser turret
  description: A burst fire heavy laser weapon mounted to a simple actuator rig with a camera. Its weapon will recharge while connected to an active power grid.
  parent: BaseWeaponEnergyTurretShip
  id: WeaponEnergyTurretShip
  components:
  - type: Gun
    shipWeapon: true
    burstCooldown: 0.4
    projectileSpeed: 50
    angleIncrease: 1.25
    maxAngle: 5
    selectedMode: Burst
    availableModes:
    - Burst

- type: entity
  id: InnateMassScanner
  abstract: true
  components:
  - type: IntrinsicUI
    uis:
      enum.RadarConsoleUiKey.Key:
        toggleAction: ActionAGhostShowRadar
  - type: UserInterface
    interfaces:
      enum.RadarConsoleUiKey.Key:
        type: RadarConsoleBoundUserInterface
  - type: RadarConsole
    followEntity: true

- type: entity
  parent: InnateMassScanner
  id: InnateMassScanner90
  abstract: true
  components:
  - type: RadarConsole
    fieldOfVision: 90

- type: entity
  parent: [BaseStructure, ConstructibleMachine]
  id: WeaponTurretModular
  suffix: Remote Controlled
  name: modular turret
  description: A remotely-operated turret designed to accept standard hand-held weapons. Being a simple gimbal mount, it is unable to recharge energy weapons.
  components:
  - type: Clickable
  - type: InteractionOutline
  - type: Actions
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeAabb
          bounds: "-0.45,-0.45,0.45,0.45"
        density: 60
        mask:
          - MachineMask
        layer:
          - MachineLayer
  - type: Sprite
    granularLayersRendering: true
    sprite: Objects/Weapons/Guns/Turrets/turrets.rsi
    drawdepth: Mobs
    layers:
      - state: syndie_base
        renderingStrategy: NoRotation
      - map: [ "assblaster" ]
        renderingStrategy: Default
        rotation: -90
  - type: InteractionPopup
    interactDelay: 0.2
    successChance: 0.8
    interactSuccessString: petting-success-generic
    interactFailureString: petting-failure-generic
    interactSuccessSound:
      path: /Audio/Effects/double_beep.ogg
  - type: CombatMode
    isInCombatMode: true
    toggleMouseRotator: false
  - type: Damageable
    damageContainer: Inorganic
  - type: Destructible
    thresholds:
      - trigger:
          !type:DamageTrigger
          damage: 200 # Was 600, most players were under the impression these were indestructible. It having an Inorganic damage container did not help.
        behaviors:
          - !type:DoActsBehavior
            acts: [ "Destruction" ]
          - !type:SpawnEntitiesBehavior
            spawn:
              WeaponTurretSyndicateBroken: # Make a broken turret when destroyed.
                min: 1
                max: 1
      - trigger:
          !type:DamageTrigger
          damage: 90 # Rather than fully smash the turret at half health, make an indication that its taking damage.
        # TODO: Construction graph
        behaviors:
          - !type:PlaySoundBehavior
            sound:
              collection: MetalGlassBreak
      - trigger:
          !type:DamageTrigger
          damage: 50 # Helps indicate that the turrets arent indestructible.
        # TODO: Construction graph
        behaviors:
          - !type:PlaySoundBehavior
            sound:
              collection: MetalGlassBreak
  - type: GunFireAngleRestriction
  - type: MouseRotator
    angleTolerance: 0.5
    rotationSpeed: 90
    simple4DirMode: false
  - type: NoRotateOnInteract
  - type: NoRotateOnMove
  - type: Input
    context: "human"
  - type: ContainerContainer
    containers:
      weapon_slot: !type:ContainerSlot
  - type: GunSlot
    slot: weapon_slot
  - type: ItemSlots
    slots:
      weapon_slot:
        ejectOnInteract: false
        ejectOnBreak: true
        swap: false
        name: Weapon slot
        priority: 1
        whitelist:
          components:
          - Gun
  - type: ItemSlotRenderer
    mapping:
      weapon_slot: assblaster
  - type: RemoteControllable
  - type: ManuallyControllable
  - type: RemoteControlOverlay
  - type: Machine
    board: WeaponTurretModularCircuitBoard
  - type: Lock
    locked: false
    lockTime: 3
    unlockTime: 10
  - type: ItemSlotsLock
    slots:
    - weapon_slot
  - type: GunSignalControl
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: BasicDevice
  - type: WiredNetworkConnection
    
- type: entity
  id: WeaponTurretModularCircuitBoard
  parent: BaseMachineCircuitboard
  name: modular turret machine board
  description: Circuitboard for a modular turret, which is a fancy way of saying "a servomotor tied to a gun's trigger with a string".
  components:
  - type: Sprite
    state: engineering
  - type: MachineBoard
    prototype: WeaponTurretModular
    requirements:
      MatterBin: 1
      Manipulator: 3
      Capacitor: 1
    materialRequirements:
      Cable: 5
      Steel: 5
