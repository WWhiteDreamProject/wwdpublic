- type: entity
  parent: MobObserver
  id: AdminObserver
  name: admin observer
  categories: [ HideSpawnMenu ]
  components:
  - type: Eye
    visMask:
    - TelegnosticProjection
    - PsionicInvisibility
    - Ghost
    - Normal
    - Ethereal
  - type: ContentEye
    maxZoom: 10, 10
  - type: MovementSpeedModifier
    baseSprintSpeed: 20
    baseWalkSpeed: 10
  - type: Tag
    tags:
    - InstantDoAfters
    - CanPilot
    - BypassInteractionRangeChecks
    - BypassDropChecks
    - NoConsoleSound
  - type: Input
    context: "aghost"
  - type: Ghost
    canInteract: true
  - type: GhostHearing
  - type: Hands
  - type: ComplexInteraction
  - type: Puller
    needsHands: false # Tail Drag
    pushAcceleration: 1000000 # Will still be capped in max speed
    maxPushRange: 20
  - type: CombatMode
  - type: Physics
    ignorePaused: true
    bodyType: Kinematic
  - type: Body
    prototype: Aghost
    thermalVisibility: false
  - type: Access
    groups:
    - AllAccess
    - Silicon
    tags:
    - NuclearOperative
    - SyndicateAgent
    - CentralCommand
  - type: UserInterface
    interfaces:
      enum.SolarControlConsoleUiKey.Key:
        type: SolarControlConsoleBoundUserInterface
      enum.CommunicationsConsoleUiKey.Key:
        type: CommunicationsConsoleBoundUserInterface
      enum.RadarConsoleUiKey.Key:
        type: RadarConsoleBoundUserInterface
      enum.CargoConsoleUiKey.Orders:
        type: CargoOrderConsoleBoundUserInterface
      enum.CrewMonitoringUIKey.Key:
        type: CrewMonitoringBoundUserInterface
      enum.GeneralStationRecordConsoleKey.Key:
        # who the fuck named this bruh
        type: GeneralStationRecordConsoleBoundUserInterface
  - type: IntrinsicUI
    uis:
      enum.SolarControlConsoleUiKey.Key:
        toggleAction: ActionAGhostShowSolar
      enum.CommunicationsConsoleUiKey.Key:
        toggleAction: ActionAGhostShowCommunications
      enum.RadarConsoleUiKey.Key:
        toggleAction: ActionAGhostShowRadar
      enum.CargoConsoleUiKey.Orders:
        toggleAction: ActionAGhostShowCargo
      enum.CrewMonitoringUIKey.Key:
        toggleAction: ActionAGhostShowCrewMonitoring
      enum.GeneralStationRecordConsoleKey.Key:
        toggleAction: ActionAGhostShowStationRecords
  - type: SolarControlConsole # look ma i AM the computer!
  - type: CommunicationsConsole
    title: comms-console-announcement-title-centcom
    color: "#228b22"
  - type: RadarConsole
    followEntity: true
  - type: CargoOrderConsole
  - type: BankClient
  - type: CrewMonitoringConsole
  - type: GeneralStationRecordConsole
    canDeleteEntries: true
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: CrewMonitor
    transmitFrequencyId: ShuttleTimer
  - type: WirelessNetworkConnection
    range: 500
  - type: StationLimitedNetwork
  - type: Thieving
    stripTimeMultiplier: 0
    ignoreStripHidden: true
  - type: Stripping
  - type: SolutionScanner
  - type: IgnoreUIRange
  - type: ShowAntagIcons
  - type: Inventory
    templateId: aghost
  - type: InventorySlots
  - type: Loadout
    prototypes: [ MobAghostGear ]
  - type: SupermatterImmune
  - type: BypassInteractionChecks
  # WD EDIT START
  - type: ShowHealthBars
    damageContainers:
    - Biological
    - Inorganic
    - Silicon
  - type: ShowHealthIcons
    damageContainers:
    - Biological
  - type: ShowJobIcons
  - type: ShowMindShieldIcons
  - type: ShowCriminalRecordIcons
  # WD EDIT END

- type: entity
  id: ActionAGhostShowSolar
  name: Solar Control Interface
  description: View a solar control interface.
  categories: [ HideSpawnMenu ]
  components:
  - type: InstantAction
    icon: { sprite: _White/Interface/Actions/consoles.rsi, state: solar } # WWDP-Edit
    iconOn: _White/Interface/Actions/consoles.rsi/solar.png # WWDP-Edit
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.SolarControlConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowCommunications
  name: Communications Interface
  description: View a communications interface.
  categories: [ HideSpawnMenu ]
  components:
  - type: InstantAction
    icon: { sprite: _White/Interface/Actions/consoles.rsi, state: communication } # WWDP-Edit
    iconOn: _White/Interface/Actions/consoles.rsi/communication.png # WWDP-Edit
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.CommunicationsConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowRadar
  name: Mass Scanner Interface
  description: View a mass scanner interface.
  categories: [ HideSpawnMenu ]
  components:
  - type: InstantAction
    icon: { sprite: _White/Interface/Actions/consoles.rsi, state: radar } # WWDP-Edit
    iconOn: _White/Interface/Actions/consoles.rsi/radar.png # WWDP-Edit
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.RadarConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowCargo
  name: Cargo Ordering Interface
  description: View a cargo ordering interface.
  categories: [ HideSpawnMenu ]
  components:
  - type: InstantAction
    icon: { sprite: _White/Interface/Actions/consoles.rsi, state: cargo } # WWDP-Edit
    iconOn: _White/Interface/Actions/consoles.rsi/cargo.png # WWDP-Edit
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.CargoConsoleUiKey.Orders }

- type: entity
  id: ActionAGhostShowCrewMonitoring
  name: Crew Monitoring Interface
  description: View a crew monitoring interface.
  categories: [ HideSpawnMenu ]
  components:
  - type: InstantAction
    icon: { sprite: _White/Interface/Actions/consoles.rsi, state: crew } # WWDP-Edit
    iconOn: _White/Interface/Actions/consoles.rsi/crew.png # WWDP-Edit
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.CrewMonitoringUIKey.Key }

- type: entity
  id: ActionAGhostShowStationRecords
  name: Station Records Interface
  description: View a station records Interface
  categories: [ HideSpawnMenu ]
  components:
  - type: InstantAction
    icon: { sprite: _White/Interface/Actions/consoles.rsi, state: records } # WWDP-Edit
    iconOn: _White/Interface/Actions/consoles.rsi/records.png # WWDP-Edit
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.GeneralStationRecordConsoleKey.Key }
