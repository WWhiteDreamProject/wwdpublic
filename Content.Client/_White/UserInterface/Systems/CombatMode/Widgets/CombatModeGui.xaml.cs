using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client._White.UserInterface.Systems.CombatMode.Widgets;

[GenerateTypedNameReferences]
public sealed partial class CombatModeGui : UIWidget
{
    public static SpriteSpecifier Sprite = new SpriteSpecifier.Rsi(new ("/Textures/_White/Interface/Misc/screen_gen.rsi"), "flash");

    public CombatModeGui()
    {
        RobustXamlLoader.Load(this);
        var controller = UserInterfaceManager.GetUIController<CombatModeUIController>();

        CombatModeButton.OnToggled += _ => controller.ToggleCombatMode();

        CombatModeFlash.SetFromSpriteSpecifier(Sprite);
        CombatModeFlash.DisplayRect.TextureScale = new (2, 2);
    }

    public void OnCombatModeUpdated(bool inCombatMode)
    {
        CombatModeButton.TexturePath = inCombatMode ? "combat_on" :  "combat_off";
        CombatModeFlash.Visible = inCombatMode;
        CombatModeButton.SetClickPressed(inCombatMode);
    }
}

