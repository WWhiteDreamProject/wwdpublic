from PIL import Image
import os, sys

path = os.getcwd()
basefile = "dollymix"
ext = ".png"
size = int(input("size: "))
reverse = size > 0
size = abs(size)


base = Image.open(os.path.join(path,basefile+ext))
amount = base.height // size

states = []

for i in range(amount):
    name = basefile+str(i+1)
    filename = name+ext
    states.append(name)
    print(filename)
    if(reverse):
        base.crop((0,size*(amount-1-i),base.width,size*(amount-i))).save(os.path.join(path,filename))
    else:
        base.crop((0,size*i,base.width,size*(i+1))).save(os.path.join(path,filename))

unshadedfile = os.path.join(path,basefile+"-unshaded"+ext)
if os.path.exists(unshadedfile):
    base = Image.open(unshadedfile)
    amount = base.height // size

    for i in range(amount):
        name = basefile+str(i+1)+"-unshaded"
        filename = name+ext
        states.append(name)
        print(filename)
        if(reverse):
            base.crop((0,size*(amount-1-i),base.width,size*(amount-i))).save(os.path.join(path,filename))
        else:
            base.crop((0,size*i,base.width,size*(i+1))).save(os.path.join(path,filename))

if(len(states) == 0):
    exit(1)

metaheader = """{
  "version": 1,
  "license": "CC-BY-SA-3.0",
  "copyright": "WWDP autogenerated",
  "size": {
    "x": 32,
    "y": 32
  },
  "states": [
"""
metaentry = """    {{ "name": "{0}" }}"""
metaterm = """
  ]
}"""

states.append("icon")
with  open(os.path.join(path,"meta.json"), 'w') as metajson:
    metajson.write(metaheader)
    metajson.write(",\n".join([metaentry.format(state) for state in states]))
    metajson.write(metaterm)